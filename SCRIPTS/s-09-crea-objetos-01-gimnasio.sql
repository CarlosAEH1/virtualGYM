--@Integrantes:
--              -Elizarraras Herrera Carlos Amador
--              -Rocha Garc√≠a Erick Hazel
--@Fecha:       14/05/2022
--@Descripcion: Crea objetos de modulo gimnasio

Prompt Creando secuencias
-- SEQUENCE: PUESTO 
create sequence PUESTO_S
start with 1
increment by 1
nominvalue
nomaxvalue
cache 20;
-- SEQUENCE: EMPLEADO 
create sequence EMPLEADO_S
start with 1
increment by 1
nominvalue
nomaxvalue
cache 20;
-- SEQUENCE: ADMINISTRADOR 
create sequence ADMINISTRADOR_S
start with 1
increment by 1
nominvalue
nomaxvalue
cache 20;
-- SEQUENCE: INSTRUCTOR 
create sequence INSTRUCTOR_S
start with 1
increment by 1
nominvalue
nomaxvalue
cache 20;
-- SEQUENCE: GIMNASIO 
create sequence GIMNASIO_S
start with 1
increment by 1
nominvalue
nomaxvalue
cache 20;
-- SEQUENCE: SALA 
create sequence SALA_S
start with 1
increment by 1
nominvalue
nomaxvalue
cache 20;
-- SEQUENCE: DISCIPLINA 
create sequence DISCIPLINA_S
start with 1
increment by 1
nominvalue
nomaxvalue
cache 20;
-- SEQUENCE: STATUS 
create sequence STATUS_S
start with 1
increment by 1
nominvalue
nomaxvalue
cache 20;
-- SEQUENCE: TIPO_DISPOSITIVO 
create sequence TIPO_DISPOSITIVO_S
start with 1
increment by 1
nominvalue
nomaxvalue
cache 20;
-- SEQUENCE: DISPOSITIVO 
create sequence DISPOSITIVO_S
start with 1
increment by 1
nominvalue
nomaxvalue
cache 20;
-- SEQUENCE: HUELLA 
create sequence HUELLA_S
start with 1
increment by 1
nominvalue
nomaxvalue
cache 20;
-- SEQUENCE: INSTRUCTOR_WEB 
create sequence INSTRUCTOR_WEB_S
start with 1
increment by 1
nominvalue
nomaxvalue
cache 20;
-- SEQUENCE: MULTIMEDIA 
create sequence MULTIMEDIA_S
start with 1
increment by 1
nominvalue
nomaxvalue
cache 20;
-- SEQUENCE: SALA_DISCIPLINA 
create sequence SALA_DISCIPLINA_S
start with 1
increment by 1
nominvalue
nomaxvalue
cache 20;
-- SEQUENCE: STATUS_DISPOSITIVO 
create sequence STATUS_DISPOSITIVO_S
start with 1
increment by 1
nominvalue
nomaxvalue
cache 20;

Prompt Creando tablas
-- TABLE: PUESTO 
CREATE TABLE PUESTO
(
  PUESTO_ID      NUMBER(10, 0)     NOT NULL,
  NOMBRE         VARCHAR2(40)      NOT NULL,
  CLAVE          VARCHAR2(10)      NOT NULL,
  DESCRIPCION    VARCHAR2(4000)    NOT NULL,
  CONSTRAINT PUESTO_PK PRIMARY KEY (PUESTO_ID) USING INDEX
  (
    CREATE UNIQUE INDEX PUESTO_PK ON PUESTO(PUESTO_ID)
    tablespace indices_ts
  ),
  CONSTRAINT PUESTO_CLAVE_CK
  CHECK (CLAVE IN ('GEREN', 'ADMIN', 'INSTR'))
)
tablespace empleados_ts;
-- TABLE: EMPLEADO 
CREATE TABLE EMPLEADO
(
  EMPLEADO_ID         NUMBER(10, 0)    NOT NULL,
  NOMBRE              VARCHAR2(40)     NOT NULL,
  AP_PAT              VARCHAR2(40)     NOT NULL,
  AP_MAT              VARCHAR2(40),
  CURP                VARCHAR2(18)     NOT NULL,
  NUM_TRABAJADOR      NUMBER(10, 0)    NOT NULL,
  RFC                 VARCHAR2(15)     NOT NULL,
  FECHA_NACIMIENTO    DATE             NOT NULL,
  EMAIL               VARCHAR2(40)     NOT NULL,
  FOTO                BLOB             NOT NULL,
  TIPO                CHAR(1)          NOT NULL,
  PUESTO_ID           NUMBER(10, 0)    NOT NULL,
  CONSTRAINT EMPLEADO_PK PRIMARY KEY (EMPLEADO_ID) USING INDEX
  (
    CREATE UNIQUE INDEX EMPLEADO_PK ON EMPLEADO(EMPLEADO_ID)
    tablespace indices_ts
  ),
  CONSTRAINT EMPLEADO_CURP_UK UNIQUE (CURP),
  CONSTRAINT EMPLEADO_RFC_UK UNIQUE (RFC),
  CONSTRAINT EMPLEADO_EMAIL_UK UNIQUE (EMAIL),
  CONSTRAINT EMPLEADO_TIPO_CK CHECK (TIPO IN ('G', 'A', 'I')),
  CONSTRAINT EMPLEADO_PUESTO_ID_FK FOREIGN KEY (PUESTO_ID)
  REFERENCES PUESTO(PUESTO_ID)
)
lob(FOTO) store as (tablespace blob_ts)
tablespace empleados_ts;
-- TABLE: ADMINISTRADOR 
CREATE TABLE ADMINISTRADOR
(
  EMPLEADO_ID    NUMBER(10, 0)    NOT NULL,
  USERNAME       VARCHAR2(40)     NOT NULL,
  PASSWORD       VARCHAR2(40)     NOT NULL,
  ROL            VARCHAR2(40)     NOT NULL,
  CERTIFICADO    BLOB             NOT NULL,
  CONSTRAINT ADMINISTRADOR_PK PRIMARY KEY (EMPLEADO_ID) USING INDEX
  (
    CREATE UNIQUE INDEX ADMINISTRADOR_PK ON ADMINISTRADOR(EMPLEADO_ID)
    tablespace indices_ts
  ),
  CONSTRAINT ADMINISTRADOR_USERNAME_UK UNIQUE (USERNAME),
  CONSTRAINT ADMINISTRADOR_EMPLEADO_ID_FK FOREIGN KEY (EMPLEADO_ID)
  REFERENCES EMPLEADO(EMPLEADO_ID)
)
lob(CERTIFICADO) store as (tablespace blob_ts)
tablespace empleados_ts;
-- TABLE: INSTRUCTOR 
CREATE TABLE INSTRUCTOR
(
  EMPLEADO_ID           NUMBER(10, 0)    NOT NULL,
  CEDULA_PROFESIONAL    NUMBER(8, 0)     NOT NULL,
  EXPERIENCIA           NUMBER(3, 0)     NOT NULL,
  SUPLENTE              NUMBER(10, 0),
  CONSTRAINT INSTRUCTOR_PK PRIMARY KEY (EMPLEADO_ID) USING INDEX
  (
    CREATE UNIQUE INDEX INSTRUCTOR_PK ON INSTRUCTOR(EMPLEADO_ID)
    tablespace indices_ts
  ),
  CONSTRAINT INSTRUCTOR_CED_PROFESIONAL_UK UNIQUE (CEDULA_PROFESIONAL),
  CONSTRAINT INSTRUCTOR_SUPLENTE_FK FOREIGN KEY (SUPLENTE)
  REFERENCES INSTRUCTOR(EMPLEADO_ID),
  CONSTRAINT INSTRUCTOR_EMPLEADO_ID_FK FOREIGN KEY (EMPLEADO_ID)
  REFERENCES EMPLEADO(EMPLEADO_ID)
)
tablespace empleados_ts;
grant references (EMPLEADO_ID) on gimnasio01.INSTRUCTOR to cliente01;
grant select on gimnasio01.INSTRUCTOR to cliente01;
-- TABLE: GIMNASIO 
CREATE TABLE GIMNASIO
(
  GIMNASIO_ID     NUMBER(10, 0)     NOT NULL,
  FOLIO           VARCHAR2(5)       NOT NULL,
  NOMBRE          VARCHAR2(40)      NOT NULL,
  CALLE           VARCHAR2(40)      NOT NULL,
  NUM_INTERIOR    NUMBER(3, 0)      NOT NULL,
  NUM_EXTERIOR    NUMBER(3, 0)      NOT NULL,
  COLONIA         VARCHAR2(40)      NOT NULL,
  COD_POSTAL      NUMBER(5, 0)      NOT NULL,
  DELEGACION      VARCHAR2(40)      NOT NULL,
  ESTADO          VARCHAR2(40)      NOT NULL,
  LATITUD         NUMBER(10, 4)     NOT NULL,
  LONGITUD        NUMBER(10, 4)     NOT NULL,
  TELEFONO        VARCHAR2(13)      NOT NULL,
  URL             VARCHAR2(4000)    NOT NULL,
  GERENTE_ID      NUMBER(10, 0)     NOT NULL,
  CONSTRAINT GIMNASIO_PK PRIMARY KEY (GIMNASIO_ID) USING INDEX
  (
    CREATE UNIQUE INDEX GIMNASIO_PK ON GIMNASIO(GIMNASIO_ID)
    tablespace indices_ts
  ),
  CONSTRAINT GIMNASIO_FOLIO_UK UNIQUE (FOLIO),
  CONSTRAINT GIMNASIO_URL_UK UNIQUE (URL),
  CONSTRAINT GIMNASIO_GERENTE_ID_FK FOREIGN KEY (GERENTE_ID)
  REFERENCES EMPLEADO(EMPLEADO_ID)
)
tablespace instalaciones_ts;
-- TABLE: SALA 
CREATE TABLE SALA
(
  SALA_ID         NUMBER(10, 0)    NOT NULL,
  CLAVE           VARCHAR2(3)      NOT NULL,
  NOMBRE          VARCHAR2(40)     NOT NULL,
  CAPACIDAD       NUMBER(10, 0)    NOT NULL,
  GIMNASIO_ID     NUMBER(10, 0)    NOT NULL,
  EMP_ADMIN_ID    NUMBER(10, 0)    NOT NULL,
  CONSTRAINT SALA_PK PRIMARY KEY (SALA_ID) USING INDEX
  (
    CREATE UNIQUE INDEX SALA_PK ON SALA(SALA_ID)
    tablespace indices_ts
  ),
  CONSTRAINT SALA_CLAVE_UK UNIQUE (CLAVE),
  CONSTRAINT SALA_GIMNASIO_ID_FK FOREIGN KEY (GIMNASIO_ID)
  REFERENCES GIMNASIO(GIMNASIO_ID),
  CONSTRAINT SALA_ADMINISTRADOR_ID_FK FOREIGN KEY (EMP_ADMIN_ID)
  REFERENCES ADMINISTRADOR(EMPLEADO_ID)
)
tablespace instalaciones_ts;
grant references (SALA_ID) on gimnasio01.SALA to cliente01;
grant select on gimnasio01.SALA to cliente01;
-- TABLE: DISCIPLINA 
CREATE TABLE DISCIPLINA
(
  DISCIPLINA_ID    NUMBER(10, 0)     NOT NULL,
  CLAVE            VARCHAR2(10)      NOT NULL,
  NOMBRE           VARCHAR2(40)      NOT NULL,
  DESCRIPCION      VARCHAR2(4000)    NOT NULL,
  ICONO            BLOB              NOT NULL,
  CONSTRAINT DISCIPLINA_PK PRIMARY KEY (DISCIPLINA_ID) USING INDEX
  (
    CREATE UNIQUE INDEX DISCIPLINA_PK ON DISCIPLINA(DISCIPLINA_ID)
    tablespace indices_ts
  ),
  CONSTRAINT DISCIPLINA_CLAVE_UK UNIQUE (CLAVE)
)
lob(ICONO) store as (tablespace blob_ts)
tablespace instalaciones_ts;
-- TABLE: STATUS 
CREATE TABLE STATUS
(
  STATUS_ID    NUMBER(10, 0)    NOT NULL,
  NOMBRE       VARCHAR2(15)     NOT NULL,
  CONSTRAINT STATUS_PK PRIMARY KEY (STATUS_ID)
   USING INDEX
  (
    CREATE UNIQUE INDEX STATUS_PK ON STATUS(STATUS_ID)
    tablespace indices_ts
  ),
  CONSTRAINT STATUS_NOMBRE_UK UNIQUE (NOMBRE), 
  CONSTRAINT STATUS_NOMBRE_CK
  CHECK
  (
    NOMBRE IN
    (
      'vigente',
      'obsoleto',
      'averiado',
      'en reparacion',
      'fuera de uso'
    )
  )
)
tablespace inventario_ts;
-- TABLE: TIPO_DISPOSITIVO 
CREATE TABLE TIPO_DISPOSITIVO
(
  TIPO_DISPOSITIVO_ID    NUMBER(10, 0)     NOT NULL,
  NOMBRE                 VARCHAR2(40)      NOT NULL,
  DESCRIPCION            VARCHAR2(4000)    NOT NULL,
  CONSTRAINT TIPO_DISPOSITIVO_PK PRIMARY KEY (TIPO_DISPOSITIVO_ID) USING INDEX
  (
    CREATE UNIQUE INDEX TIPO_DISPOSITIVO_PK
    ON TIPO_DISPOSITIVO(TIPO_DISPOSITIVO_ID)
    tablespace indices_ts
  )
)
tablespace inventario_ts;
-- TABLE: DISPOSITIVO 
CREATE TABLE DISPOSITIVO
(
  DISPOSITIVO_ID         NUMBER(10, 0)    NOT NULL,
  NUM_INVENTARIO         VARCHAR2(18)     NOT NULL,
  FECHA_ADQUISION        DATE             NOT NULL,
  TIPO_DISPOSITIVO_ID    NUMBER(10, 0)    NOT NULL,
  SALA_ID                NUMBER(10, 0)    NOT NULL,
  STATUS_ID              NUMBER(10, 0)    NOT NULL,
  CONSTRAINT DISPOSITIVO_PK PRIMARY KEY (DISPOSITIVO_ID) USING INDEX
  (
    CREATE UNIQUE INDEX DISPOSITIVO_PK ON DISPOSITIVO(DISPOSITIVO_ID)
    tablespace indices_ts
  ),
  CONSTRAINT DISPOSITIVO_NUM_INVENTARIO_UK UNIQUE(NUM_INVENTARIO),
  CONSTRAINT SISPOSITIVO_STATUS_ID_FK FOREIGN KEY (STATUS_ID)
  REFERENCES STATUS(STATUS_ID),
  CONSTRAINT DISPOSITIVO_SALA_ID_FK FOREIGN KEY (SALA_ID)
  REFERENCES SALA(SALA_ID),
  CONSTRAINT DISPOSITIVO_TIPO_ID_FK FOREIGN KEY (TIPO_DISPOSITIVO_ID)
  REFERENCES TIPO_DISPOSITIVO(TIPO_DISPOSITIVO_ID)
)
tablespace inventario_ts;
grant references (DISPOSITIVO_ID) on gimnasio01.DISPOSITIVO to cliente01;
grant select on gimnasio01.DISPOSITIVO to cliente01;
-- TABLE: HUELLA 
CREATE TABLE HUELLA
(
  EMPLEADO_ID    NUMBER(10, 0)    NOT NULL,
  HUELLA0        BLOB             NOT NULL,
  HUELLA1        BLOB             NOT NULL,
  HUELLA2        BLOB             NOT NULL,
  HUELLA3        BLOB             NOT NULL,
  HUELLA4        BLOB             NOT NULL,
  HUELLA5        BLOB             NOT NULL,
  HUELLA6        BLOB             NOT NULL,
  HUELLA7        BLOB             NOT NULL,
  HUELLA8        BLOB             NOT NULL,
  HUELLA9        BLOB             NOT NULL,
  CONSTRAINT HUELLA_PK PRIMARY KEY (EMPLEADO_ID) USING INDEX
  (
    CREATE UNIQUE INDEX HUELLA_PK ON HUELLA(EMPLEADO_ID)
    tablespace indices_ts
  ), 
  CONSTRAINT HUELLA_EMPLEADO_ID_FK FOREIGN KEY (EMPLEADO_ID)
  REFERENCES EMPLEADO(EMPLEADO_ID)
)
tablespace huellas_ts;
-- TABLE: INSTRUCTOR_WEB 
CREATE TABLE INSTRUCTOR_WEB
(
  INSTRUCTOR_WEB_ID    NUMBER(10, 0)     NOT NULL,
  URL                  VARCHAR2(4000)    NOT NULL,
  EMPLEADO_ID          NUMBER(10, 0)     NOT NULL,
  CONSTRAINT INSTRUCTOR_WEB_PK PRIMARY KEY (INSTRUCTOR_WEB_ID) USING INDEX
  (
    CREATE UNIQUE INDEX INSTRUCTOR_WEB_PK ON INSTRUCTOR_WEB(INSTRUCTOR_WEB_ID)
    tablespace indices_ts
  ),
  CONSTRAINT INSTRUCTOR_WEB_URL_UK UNIQUE (URL),
  CONSTRAINT INSTRUCTOR_WEB_EMPLEADO_ID_FK FOREIGN KEY (EMPLEADO_ID)
  REFERENCES INSTRUCTOR(EMPLEADO_ID)
)
tablespace empleados_ts;
-- TABLE: MULTIMEDIA 
CREATE TABLE MULTIMEDIA
(
  MULTIMEDIA_ID      NUMBER(10, 0)    NOT NULL,
  CONTENIDO          BLOB             NOT NULL,
  VIGENCIA_INICIO    DATE             NOT NULL,
  VIGENCIA_FIN       DATE             NOT NULL,
  TIPO               VARCHAR2(6)      NOT NULL,
  GIMNASIO_ID        NUMBER(10, 0)    NOT NULL,
  CONSTRAINT MULTIMEDIA_PK PRIMARY KEY (MULTIMEDIA_ID) USING INDEX
  (
    CREATE UNIQUE INDEX MULTIMEDIA_PK ON MULTIMEDIA(MULTIMEDIA_ID)
    tablespace indices_ts
  ),
  CONSTRAINT MULTIMEDIA_TIPO_CK CHECK (TIPO IN ('imagen', 'video')),
  CONSTRAINT MULTIMEDIA_GIMNASIO_ID_FK FOREIGN KEY (GIMNASIO_ID)
  REFERENCES GIMNASIO(GIMNASIO_ID)
)
lob(CONTENIDO) store as (tablespace blob_ts)
tablespace instalaciones_ts;
-- TABLE: SALA_DISCIPLINA 
CREATE TABLE SALA_DISCIPLINA
(
  SALA_DISCIPLINA_ID    NUMBER(10, 0)    NOT NULL,
  SALA_ID               NUMBER(10, 0)    NOT NULL,
  DISCIPLINA_ID         NUMBER(10, 0)    NOT NULL,
  CONSTRAINT SALA_DISCIPLINA_PK PRIMARY KEY (SALA_DISCIPLINA_ID) USING INDEX
  (
    CREATE UNIQUE INDEX SALA_DISCIPLINA_PK
    ON SALA_DISCIPLINA(SALA_DISCIPLINA_ID)
    tablespace indices_ts
  ),
  CONSTRAINT SALA_DISCIPLINA_SALA_ID_FK FOREIGN KEY (SALA_ID)
  REFERENCES SALA(SALA_ID),
  CONSTRAINT SALA_DISCIPLINA_ID_FK FOREIGN KEY (DISCIPLINA_ID)
  REFERENCES DISCIPLINA(DISCIPLINA_ID)
)
tablespace instalaciones_ts;
-- TABLE: STATUS_DISPOSITIVO 
CREATE TABLE STATUS_DISPOSITIVO
(
  STATUS_DISPOSITIVO_ID    NUMBER(10, 0)    NOT NULL,
  FECHA_STATUS             DATE             NOT NULL,
  DISPOSITIVO_ID           NUMBER(10, 0)    NOT NULL,
  STATUS_ID                NUMBER(10, 0)    NOT NULL,
  CONSTRAINT STATUS_DISPOSITIV_PK PRIMARY KEY (STATUS_DISPOSITIVO_ID)
  USING INDEX
  (
    CREATE UNIQUE INDEX STATUS_DISPOSITIVO_PK
    ON STATUS_DISPOSITIVO(STATUS_DISPOSITIVO_ID)
    tablespace indices_ts
  ),
  CONSTRAINT STATUS_DISPOSITIV_STATUS_ID_FK FOREIGN KEY (STATUS_ID)
  REFERENCES STATUS(STATUS_ID),
  CONSTRAINT STATUS_DISPOSITIV_ID_FK FOREIGN KEY (DISPOSITIVO_ID)
  REFERENCES DISPOSITIVO(DISPOSITIVO_ID)
)
tablespace inventario_ts;

Prompt Creando indices
-- INDEX: EMPLEADO
CREATE INDEX EMPLEADO_PUESTO_ID_IX ON EMPLEADO(PUESTO_ID)
tablespace indices_ts;
-- INDEX: GIMNASIO
CREATE INDEX GIMNASIO_GERENTE_ID_IX ON GIMNASIO(GERENTE_ID)
tablespace indices_ts;
-- INDEX: SALA
CREATE INDEX SALA_GIMNASIO_ID_IX ON SALA(GIMNASIO_ID)
tablespace indices_ts;
CREATE INDEX SALA_EMP_ADMIN_ID_IX ON SALA(EMP_ADMIN_ID)
tablespace indices_ts;
-- INDEX: DISPOSITIVO
CREATE INDEX DISPOSITIVO_TIPO_ID_IX ON DISPOSITIVO(TIPO_DISPOSITIVO_ID)
tablespace indices_ts;
CREATE INDEX DISPOSITIVO_SALA_ID_IX ON DISPOSITIVO(SALA_ID)
tablespace indices_ts;
CREATE INDEX DISPOSITIVO_STATUS_ID_IX ON DISPOSITIVO(STATUS_ID)
tablespace indices_ts;
-- INDEX: SALA DISCIPLINA
CREATE INDEX SALA_DISCIPLINA_SALA_ID_IX ON SALA_DISCIPLINA(SALA_ID)
tablespace indices_ts;
CREATE INDEX SALA_DISCIPLINA_ID_IX ON SALA_DISCIPLINA(DISCIPLINA_ID)
tablespace indices_ts;
-- INDEX: STATUS DISPOSITIVO
CREATE INDEX STATUS_DISPOSITIVO_ID_IX ON STATUS_DISPOSITIVO(DISPOSITIVO_ID)
tablespace indices_ts;
CREATE INDEX STATUS_DISPOSITIVO_STATU_ID_IX ON STATUS_DISPOSITIVO(STATUS_ID)
tablespace indices_ts;